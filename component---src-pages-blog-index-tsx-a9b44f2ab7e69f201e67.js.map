{"version":3,"file":"component---src-pages-blog-index-tsx-a9b44f2ab7e69f201e67.js","mappings":"yIAsDA,IAnDeA,IAMR,IANS,UACdC,EAAS,SACTC,GAID,EACC,MAAMC,GAAOC,EAAAA,EAAAA,IAAe,cAU5B,OACEC,EAAAA,cAAAA,MAAAA,CAAKC,UAAU,2DACbD,EAAAA,cAAAA,SAAAA,CAAQC,UAAU,6EAChBD,EAAAA,cAAAA,KAAAA,KACEA,EAAAA,cAACE,EAAAA,GAAI,CAACC,IAAIC,EAAAA,EAAAA,IAAW,MAAON,EAAKO,KAAKC,aAAaC,QAErDP,EAAAA,cAAAA,MAAAA,KACEA,EAAAA,cAAAA,KAAAA,CAAIC,UAAU,wDACZD,EAAAA,cAAAA,KAAAA,KACEA,EAAAA,cAACE,EAAAA,GAAI,CAACC,IAAIC,EAAAA,EAAAA,IAAW,MAAM,MAE7BJ,EAAAA,cAAAA,KAAAA,KACEA,EAAAA,cAACE,EAAAA,GAAI,CAACC,IAAIC,EAAAA,EAAAA,IAAW,UAAU,QAEjCJ,EAAAA,cAAAA,KAAAA,KACEA,EAAAA,cAACE,EAAAA,GAAI,CAACC,IAAIC,EAAAA,EAAAA,IAAW,UAAU,mBAKvCJ,EAAAA,cAAAA,MAAAA,CAAKC,UAAU,qDACbD,EAAAA,cAAAA,OAAAA,CAAMC,UAAU,kEACdD,EAAAA,cAAAA,KAAAA,KAAKJ,GACJC,GAEHG,EAAAA,cAAAA,SAAAA,CAAQC,UAAU,6EAChBD,EAAAA,cAAAA,IAAAA,KAAG,8BACHA,EAAAA,cAAAA,MAAAA,KAAK,gBAGL,C,+CC7BV,IAlBYL,IAAmC,IAAlC,MAAEY,GAA0B,EACvC,MAAMT,GAAOC,EAAAA,EAAAA,IAAe,cAU5B,OACEC,EAAAA,cAAAA,QAAAA,KACGO,EAAM,MAAIT,EAAKO,KAAKC,aAAaC,MAC5B,C,6GCZZ,MAAMC,EAAQ,OAoBd,UAlBiBb,IAA6B,IAA5B,KAAEG,GAAqB,EACvC,OACEE,EAAAA,cAACS,EAAAA,EAAM,CAACb,UAAWY,GAChBV,EAAKY,OAAOC,MAAMC,KAAKC,GACtBb,EAAAA,cAAAA,UAAAA,CAASc,IAAKD,EAAKE,IACjBf,EAAAA,cAAAA,KAAAA,KACEA,EAAAA,cAACE,EAAAA,GAAI,CAACC,GAAK,SAAQU,EAAKG,YAAYC,QACjCJ,EAAKG,YAAYT,QAGtBP,EAAAA,cAAAA,QAAAA,KAAQa,EAAKG,YAAYE,MACzBlB,EAAAA,cAAAA,IAAAA,KAAIa,EAAKM,YAGN,EAMN,MAgBMC,EAAO,IAAMpB,EAAAA,cAACqB,EAAAA,EAAG,CAACd,MAAOC,G","sources":["webpack://one-dev-blog/./src/components/layout.tsx","webpack://one-dev-blog/./src/components/seo.tsx","webpack://one-dev-blog/./src/pages/blog/index.tsx"],"sourcesContent":["import * as React from \"react\";\nimport { Link, useStaticQuery, graphql, withPrefix } from \"gatsby\";\n\nconst Layout = ({\n  pageTitle,\n  children,\n}: {\n  pageTitle: string;\n  children: React.ReactNode;\n}) => {\n  const data = useStaticQuery(graphql`\n    query {\n      site {\n        siteMetadata {\n          title\n        }\n      }\n    }\n  `);\n\n  return (\n    <div className=\"border border-solid flex flex-col items-center h-screen\">\n      <header className=\"border border-solid border-black flex justify-between items-center w-full\">\n        <h1>\n          <Link to={withPrefix(\"/\")}>{data.site.siteMetadata.title}</Link>\n        </h1>\n        <nav>\n          <ul className=\"border border-solid border-black flex flex-row gap-4\">\n            <li>\n              <Link to={withPrefix(\"/\")}>홈</Link>\n            </li>\n            <li>\n              <Link to={withPrefix(\"/blog\")}>블로그</Link>\n            </li>\n            <li>\n              <Link to={withPrefix(\"/wiki\")}>내 머릿속(이었으면)</Link>\n            </li>\n          </ul>\n        </nav>\n      </header>\n      <div className=\"flex flex-col items-center w-full overflow-y-auto\">\n        <main className=\"border border-solid border-black w-full max-w-2xl min-h-screen\">\n          <h1>{pageTitle}</h1>\n          {children}\n        </main>\n        <footer className=\"border border-solid border-black w-full flex justify-between items-center\">\n          <p>Copyright ⓒ jiwonChoi 2025</p>\n          <div>some links</div>\n        </footer>\n      </div>\n    </div>\n  );\n};\n\nexport default Layout;\n","import * as React from \"react\";\nimport { graphql, useStaticQuery } from \"gatsby\";\n\nconst Seo = ({ title }: { title: string }) => {\n  const data = useStaticQuery(graphql`\n    query {\n      site {\n        siteMetadata {\n          title\n        }\n      }\n    }\n  `);\n\n  return (\n    <title>\n      {title} | {data.site.siteMetadata.title}\n    </title>\n  );\n};\n\nexport default Seo;\n","import * as React from \"react\";\nimport Seo from \"../../components/seo\";\nimport Layout from \"../../components/layout\";\nimport { Link, graphql } from \"gatsby\";\n\nconst TITLE = \"Blog\";\n\nconst BlogPage = ({ data }: { data: any }) => {\n  return (\n    <Layout pageTitle={TITLE}>\n      {data.allMdx.nodes.map((node: any) => (\n        <article key={node.id}>\n          <h2>\n            <Link to={`/blog/${node.frontmatter.slug}`}>\n              {node.frontmatter.title}\n            </Link>\n          </h2>\n          <small>{node.frontmatter.date}</small>\n          <p>{node.excerpt}</p>\n        </article>\n      ))}\n    </Layout>\n  );\n};\n\nexport default BlogPage;\n\nexport const query = graphql`\n  query {\n    allMdx(sort: { frontmatter: { date: DESC } }) {\n      nodes {\n        frontmatter {\n          date(formatString: \"YYYY.MM.DD\")\n          title\n          slug\n        }\n        id\n        excerpt\n      }\n    }\n  }\n`;\n\nexport const Head = () => <Seo title={TITLE} />;\n"],"names":["_ref","pageTitle","children","data","useStaticQuery","React","className","Link","to","withPrefix","site","siteMetadata","title","TITLE","Layout","allMdx","nodes","map","node","key","id","frontmatter","slug","date","excerpt","Head","Seo"],"sourceRoot":""}