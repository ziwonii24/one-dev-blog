{"version":3,"file":"component---src-templates-category-template-tsx-40af6b3de311a2af0635.js","mappings":"6LAWe,SAASA,EAAS,GAA6B,IAA7B,KAAEC,EAAI,WAAEC,GAAmB,EAC1D,MAAMC,GAAQC,EAAAA,EAAAA,GAASH,EAAKI,YAAYC,YACxC,OACEC,EAAAA,cAAAA,UAAAA,CAASC,IAAKP,EAAKQ,GAAIC,UAAU,sCAC/BH,EAAAA,cAACI,EAAAA,GAAI,CACHC,GAAK,IAAGX,EAAKI,YAAYQ,QAAQZ,EAAKI,YAAYS,OAClDJ,UAAU,+BAEVH,EAAAA,cAAAA,MAAAA,CAAKG,UAAU,uCACbH,EAAAA,cAAAA,MAAAA,KACEA,EAAAA,cAAAA,MAAAA,CAAKG,UAAU,6CACZR,aAAU,EAAVA,EAAYa,KAAKC,GAChBT,EAAAA,cAACU,EAAAA,EAAQ,CAACT,IAAKQ,EAAUE,QAASF,OAGtCT,EAAAA,cAAAA,KAAAA,CAAIG,UAAU,8BACXT,EAAKI,YAAYc,OAEpBZ,EAAAA,cAAAA,IAAAA,CAAGG,UAAU,gBAAgBT,EAAKmB,UAEpCb,EAAAA,cAAAA,OAAAA,CAAMG,UAAU,sBAAsBT,EAAKI,YAAYgB,OAExDlB,GACCI,EAAAA,cAACe,EAAAA,EAAW,CACVnB,MAAOA,EACPoB,IAAKtB,EAAKI,YAAYmB,eACtBd,UAAU,mCAMtB,C,sGCLe,SAASe,EAAiB,GAGnB,IAHmB,KACvCC,EAAI,YACJC,GACkB,EAClB,MAAM,SAAEX,GAAaW,EACrB,OACEpB,EAAAA,cAACqB,EAAAA,EAAM,CAACC,UAAY,aAAYb,KAC9BT,EAAAA,cAAAA,UAAAA,CAASG,UAAU,uBAChBgB,EAAKI,OAAOC,MAAMhB,KAAKd,GACtBM,EAAAA,cAACP,EAAAA,EAAQ,CACPQ,IAAKP,EAAKQ,GACVR,KAAMA,EACNC,WAAYD,EAAKI,YAAYW,cAMzC,C","sources":["webpack://one-dev-blog/./src/components/post/PostCard.tsx","webpack://one-dev-blog/./src/templates/category-template.tsx"],"sourcesContent":["import * as React from \"react\";\nimport { Link } from \"gatsby\";\nimport { GatsbyImage, getImage } from \"gatsby-plugin-image\";\nimport { TPostNode } from \"@/types/post\";\nimport Category from \"../Category\";\n\ntype Props = {\n  post: TPostNode;\n  categories?: string[];\n};\n\nexport default function PostCard({ post, categories }: Props) {\n  const image = getImage(post.frontmatter.hero_image);\n  return (\n    <article key={post.id} className=\"p-3 rounded-lg border hover:shadow\">\n      <Link\n        to={`/${post.frontmatter.path}/${post.frontmatter.slug}`}\n        className=\"w-full flex justify-between\"\n      >\n        <div className=\"flex flex-col justify-between gap-2\">\n          <div>\n            <div className=\"flex flex-row flex-wrap gap-1 mb-2 w-full\">\n              {categories?.map((category) => (\n                <Category key={category} content={category} />\n              ))}\n            </div>\n            <h2 className=\"text-xl font-semibold mb-2\">\n              {post.frontmatter.title}\n            </h2>\n            <p className=\"text-balance\">{post.excerpt}</p>\n          </div>\n          <span className=\"text-sm font-light\">{post.frontmatter.date}</span>\n        </div>\n        {image && (\n          <GatsbyImage\n            image={image}\n            alt={post.frontmatter.hero_image_alt}\n            className=\"rounded-xl w-36 min-w-36 h-36\"\n          />\n        )}\n      </Link>\n    </article>\n  );\n}\n","import React from \"react\";\nimport { graphql, PageProps } from \"gatsby\";\nimport Layout from \"@/components/layout\";\nimport PostCard from \"@/components/post/PostCard\";\nimport { TPostsData } from \"@/types/post\";\n\ntype CategoryPageContext = {\n  category: string;\n};\n\ntype CategoryPageProps = PageProps<TPostsData, CategoryPageContext>;\n\nexport const query = graphql`\n  query ($category: String!) {\n    allMdx(\n      sort: { frontmatter: { date: DESC } }\n      filter: { frontmatter: { category: { in: [$category] } } }\n    ) {\n      nodes {\n        frontmatter {\n          date(formatString: \"YYYY-MM-DD\")\n          title\n          slug\n          hero_image {\n            childImageSharp {\n              gatsbyImageData(width: 140)\n            }\n          }\n          hero_image_alt\n          category\n          path\n        }\n        id\n      }\n    }\n  }\n`;\n\nexport default function CategoryTemplate({\n  data,\n  pageContext,\n}: CategoryPageProps) {\n  const { category } = pageContext;\n  return (\n    <Layout pageTitle={`Category: ${category}`}>\n      <section className=\"flex flex-col gap-2\">\n        {data.allMdx.nodes.map((post) => (\n          <PostCard\n            key={post.id}\n            post={post}\n            categories={post.frontmatter.category}\n          />\n        ))}\n      </section>\n    </Layout>\n  );\n}\n"],"names":["PostCard","post","categories","image","getImage","frontmatter","hero_image","React","key","id","className","Link","to","path","slug","map","category","Category","content","title","excerpt","date","GatsbyImage","alt","hero_image_alt","CategoryTemplate","data","pageContext","Layout","pageTitle","allMdx","nodes"],"sourceRoot":""}